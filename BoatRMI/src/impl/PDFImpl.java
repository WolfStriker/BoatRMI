package impl;

import java.io.FileOutputStream;
import java.rmi.RemoteException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;

import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.mysql.jdbc.PreparedStatement;

import bean.Boat;
import interfaces.IPDF;

public class PDFImpl implements IPDF{

	private ConnBDDImpl connBDD;
	private Connection conn;
	private static String FILE = "C:/temp/Boats.pdf";
	
	@Override
	public void generatePDF(ArrayList<Boat> boats) throws RemoteException {
		try {
			Document document = new Document();
			PdfWriter.getInstance(document, new FileOutputStream(FILE));
			document.open();
			document.addTitle("Boats");
		    document.addSubject("EncycloBoat");
		    document.addKeywords("EncycloBoat, Boat");
		    document.addAuthor("EncycloBoat");
		    document.addCreator("EncycloBoat");
		    Paragraph preface = new Paragraph();
		    // Add empty line
		    preface.add(new Paragraph(" "));
		    // Lets write a big header
		    preface.add(new Paragraph("EncycloBoat", new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD)));
		    preface.add(new Paragraph(" "));
		    // Will create: Report generated by: _name, _date
		    preface.add(new Paragraph("Report generated by: EncycloBoat, " + new Date(), new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD)));
		    preface.add(new Paragraph(" "));
		    preface.add(new Paragraph(" "));
		    
		    preface.add(new Paragraph("Ce document liste tous les bateaux que vous avez sélectionnés", new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD)));
		    preface.add(new Paragraph(" "));

		    document.add(preface);
		    PdfPTable table = new PdfPTable(4);

		    // t.setBorderColor(BaseColor.GRAY);
		    // t.setPadding(4);
		    // t.setSpacing(4);
		    // t.setBorderWidth(1);

		    PdfPCell c1 = new PdfPCell(new Phrase("Nom"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    table.addCell(c1);

		    c1 = new PdfPCell(new Phrase("Notice"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    table.addCell(c1);

		    c1 = new PdfPCell(new Phrase("Photo"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    table.addCell(c1);
		    
		    c1 = new PdfPCell(new Phrase("Groupe"));
		    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    table.addCell(c1);
		    table.setHeaderRows(1);

		    for(int i= 0 ; i<boats.size(); i++){
		    	table.addCell(boats.get(i).getNom());
		    	table.addCell(boats.get(i).getNotice());
		    	table.addCell(Image.getInstance(System.getProperty("user.dir")+"/WebContent/images/bateaux/"+boats.get(i).getPhoto()));
		    	table.addCell(getGroupName(boats.get(i).getGroupe()));
		    }
		    
		    document.add(table);
		    
			document.close();
			System.out.println("Generation du pdf \n"+FILE+"\nOK!");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private String getGroupName(int id) throws RemoteException{
		if(connBDD.connection()){
			conn = connBDD.getConnection();
			try {
				String select = "SELECT nom FROM groupe WHERE id=?";
				PreparedStatement pst = (PreparedStatement) conn.prepareStatement(select);
				pst.setInt(1, id);
				ResultSet rs = pst.executeQuery();
				if(rs.next()){
					connBDD.closeConnection();
					return rs.getString("nom");
				}
				connBDD.closeConnection();
				return null;
			} catch (SQLException e) {
				e.printStackTrace();
				connBDD.closeConnection();
				return null;
			}
		}
		else{
			return null;
		}
	}

}
